/*
	What is a database transaction? 
	= single unit of work that consists of one or more operations 
	example: bank transfer from one account to another 
	
	ACID 
	atomic: guarantees the transaction is completed
	consistent: ensure the change to data written to the database is valid & follows predefined rules 
	isolated: how transation integrity is visible to other transactions 
	durable: ensure transactions are committed & stored in database permanently
*/

drop table if exists accounts; 

create table accounts ( 
	id int generated by default as identity, 
	name varchar(100) not null, 
	balance dec(15,2) not null, 
	primary key (id)
);

select * from accounts; 

insert into accounts(name,balance)
values('Bob',10000);

-- start a transaction -- 
begin transaction; 
-- or 
begin work; 
-- or 
begin; 

-- start a new transaction & insert a new accoutn into the accounts table 
begin; 

insert into accounts(name, balance) 
values('Alice', 10000);

select id, name, balance
from accounts; 

-- make changes visible to other sessions(or users) you need to commit the transation 
commit work; 
-- or 
commit transaction; 
-- or 
commit; 

-- commit guarantees that the change will be durable if a crash happens 

-- start transation 
begin; 

-- insert a new row 
insert into accounts(name,balance) 
values('Alice',10000); 

-- commit the change
commit; 